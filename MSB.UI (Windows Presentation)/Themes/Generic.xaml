<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="clr-namespace:MSB.Media.Animations"
    xmlns:converters="clr-namespace:MSB.Converters"
    xmlns:controls="clr-namespace:MSB.UI.Controls"
    xmlns:ui="clr-namespace:MSB.UI">
    
    <!--#region 'ControlsResources'-->

    <FontFamily x:Key="SymbolFontFamily">pack://application:,,,/MSB.UI-WPF;component/Assets/#Segoe MDL2 Assets</FontFamily>

    <KeyTime x:Key="SplitViewPaneAnimationOpenPreDuration">0:0:0</KeyTime>
    <KeyTime x:Key="SplitViewPaneAnimationOpenDuration">0:0:0.35</KeyTime>
    <KeyTime x:Key="SplitViewPaneAnimationCloseDuration">0:0:0.12</KeyTime>

    <converters:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter"/>

    <PathGeometry x:Key="Icons.UI.Chrome.Minimize">
        M14 8v1H3V8h11z
    </PathGeometry>
    <PathGeometry x:Key="Icons.UI.Chrome.Maximize">
        M3 3v10h10V3H3zm9 9H4V4h8v8z
    </PathGeometry>
    <PathGeometry x:Key="Icons.UI.Chrome.Restore">
        M3 5v9h9V5H3zm8 8H4V6h7v7z
        M5 5h1V4h7v7h-1v1h2V3H5v2z
    </PathGeometry>
    <PathGeometry x:Key="Icons.UI.Chrome.Close">
        M7.116 8l-4.558 4.558.884.884L8 8.884l4.558 4.558.884-.884L8.884 8l4.558-4.558-.884-.884L8 7.116 3.442 2.558l-.884.884L7.116 8z
    </PathGeometry>

    <Style x:Key="CaptionWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource TitleBarButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleBarButtonForeground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Path x:Name="Icon" Width="16" Height="16" Fill="{TemplateBinding Foreground}" Data="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TitleBarButtonBackgroundPointerOver}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TitleBarButtonForegroundPointerOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TitleBarButtonBackgroundPressed}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TitleBarButtonForegroundPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TitleBarButtonBackgroundDisabled}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TitleBarButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionWindowButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <Path x:Name="Icon" Width="16" Height="16" Fill="{TemplateBinding Foreground}" Data="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#FFC42B1C"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="DarkRed"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource TitleBarButtonBackgroundDisabled}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource TitleBarButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationBackButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultFocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource NavigationButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationButtonForeground}"/>
        <Setter Property="FontFamily" Value="{StaticResource SymbolFontFamily}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="Content" Content="&#xE72B;" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundPointerOver}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundPointerOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundPressed}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundDisabled}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PaneToggleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultFocusVisualStyle}"/>
        <Setter Property="Background" Value="{DynamicResource NavigationButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource NavigationButtonForeground}"/>
        <Setter Property="FontFamily" Value="{StaticResource SymbolFontFamily}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="40"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LayoutRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource ControlCornerRadius}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="Content" Content="&#xE700;" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundPointerOver}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundPointerOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundPressed}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource NavigationButtonBackgroundDisabled}"/>
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{DynamicResource NavigationButtonForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region 'MSB.UI.ModernWindow'-->

    <Style TargetType="ui:ModernWindow">
        <Setter Property="Background" Value="{DynamicResource WindowChromeBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WindowChromeBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome NonClientFrameEdges="None" CaptionHeight="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ui:ModernWindow">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="GridRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_TitleBar" Grid.Row="0" Panel.ZIndex="1" Background="{DynamicResource WindowTitleBarBackgroundBrush}" WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" x:Name="IconPresenter" Width="16" Height="16" Margin="8" Content="{TemplateBinding Icon}"/>
                                <TextBlock Grid.Column="1" x:Name="TitlePresenter" Text="{TemplateBinding Title}" Margin="15 0" VerticalAlignment="Center"/>
                                <Rectangle Grid.ColumnSpan="2" x:Name="TitleBarRect" Fill="{DynamicResource SystemControlTransparentBrush}" MinWidth="30"/>
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Button x:Name="Minimize" Style="{StaticResource CaptionWindowButtonStyle}" Content="{StaticResource Icons.UI.Chrome.Minimize}"/>
                                    <Button x:Name="MaxRest" Style="{StaticResource CaptionWindowButtonStyle}" Content="{StaticResource Icons.UI.Chrome.Maximize}"/>
                                    <Button x:Name="Close" Style="{StaticResource CloseWindowButtonStyle}" Content="{StaticResource Icons.UI.Chrome.Close}"/>
                                </StackPanel>
                            </Grid>
                            <Border Grid.Row="1" x:Name="PART_Content" Panel.ZIndex="0" Background="{TemplateBinding Background}">
                                <ContentPresenter Grid.Row="1" x:Name="ContentPresenter" Content="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="Minimize" Property="IsEnabled" Value="False"/>
                            <Setter TargetName="MaxRest" Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanMinimize">
                            <Setter TargetName="MaxRest" Property="IsEnabled" Value="False"/>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="MaxRest" Property="Content" Value="{StaticResource Icons.UI.Chrome.Restore}"/>
                            <Setter TargetName="GridRoot" Property="Margin" Value="6"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowChromeBorderBrushInactive}"/>
                        </Trigger>
                        <Trigger Property="ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="PART_TitleBar" Property="Background" Value="{x:Null}"/>
                            <Setter TargetName="PART_Content" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="PART_Content" Property="Grid.RowSpan" Value="2"/>
                            <Setter TargetName="TitlePresenter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="TitleBarRect" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsIconVisible" Value="False">
                            <Setter TargetName="IconPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsTitleVisible" Value="False">
                            <Setter TargetName="TitlePresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region 'MSB.UI.Controls.FontIcon'-->

    <Style TargetType="controls:FontIcon">
        <Setter Property="Foreground" Value="{DynamicResource IconElementForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:FontIcon">
                    <TextBlock x:Name="PART_Glyph" Text="{TemplateBinding Glyph}" FontFamily="{StaticResource SymbolFontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#endregion-->
    
    <!--#region 'MSB.UI.Controls.PathIcon'-->

    <Style TargetType="controls:PathIcon">
        <Setter Property="Foreground" Value="{DynamicResource IconElementForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PathIcon">
                    <Viewbox Margin="{TemplateBinding Padding}">
                        <Path x:Name="PART_Path" Data="{TemplateBinding Data}" Fill="{TemplateBinding Foreground}" Stretch="UniformToFill"/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region 'MSB.UI.Controls.SplitView'-->

    <Style TargetType="controls:SplitView">
        <Setter Property="PaneBackground" Value="{DynamicResource SplitViewPaneBackground}"/>
        <Setter Property="Background" Value="{DynamicResource SplitViewBackgroundBrush}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SplitView">
                    <Grid x:Name="Root" Background="{TemplateBinding Background}">
                        <Grid.Resources>
                            <!--#region Transitions-->
                            <Storyboard x:Key="ClosedToOpenOverlayLeftStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ClosedToOpenOverlayRightStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ClosedCompactLeftToOpenCompactOverlayLeftStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ClosedCompactRightToOpenCompactOverlayRightStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="*"/>
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenOverlayLeftToClosedStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenOverlayRightToClosedStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding TemplateSettings.NegativeOpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenCompactOverlayLeftToClosedCompactLeftStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenCompactOverlayRightToClosedCompactRightStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="*"/>
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--#endregion-->

                            <!--#region States-->
                            <Storyboard x:Key="ClosedCompactLeftStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="PaneClipRectangleTransform" To="{Binding TemplateSettings.NegativeOpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="X"/>
                            </Storyboard>
                            <Storyboard x:Key="ClosedCompactRightStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="*"/>
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="2"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="PaneClipRectangleTransform" To="{Binding TemplateSettings.OpenPaneLengthMinusCompactLength, RelativeSource={RelativeSource Mode=TemplatedParent}}" Storyboard.TargetProperty="X"/>
                            </Storyboard>
                            <Storyboard x:Key="OpenOverlayLeftStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenOverlayRightStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenInlineLeftStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform" Storyboard.TargetProperty="X">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenInlineRightStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="*"/>
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.OpenPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenCompactOverlayLeftStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.Column)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OpenCompactOverlayRightStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition1" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="*"/>
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="ColumnDefinition2" Storyboard.TargetProperty="(ColumnDefinition.Width)"
                                                                To="{Binding TemplateSettings.CompactPaneGridLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="1"/>
                                </Int32AnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Right}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="HorizontalAlignment">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static HorizontalAlignment.Left}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="(UIElement.Visibility)">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>

                            <Storyboard x:Key="OverlayVisibleStoryboard">
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer" Storyboard.TargetProperty="Fill">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{DynamicResource SplitViewLightDismissLayerBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <!--#endregion-->
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition Storyboard="{StaticResource ClosedToOpenOverlayLeftStoryboard}"
                                                      From="Closed" To="OpenOverlayLeft" />
                                    <VisualTransition Storyboard="{StaticResource ClosedToOpenOverlayRightStoryboard}"
                                                      From="Closed" To="OpenOverlayRight" />
                                    <VisualTransition Storyboard="{StaticResource ClosedCompactLeftToOpenCompactOverlayLeftStoryboard}"
                                                      From="ClosedCompactLeft" To="OpenCompactOverlayLeft" />
                                    <VisualTransition Storyboard="{StaticResource ClosedCompactRightToOpenCompactOverlayRightStoryboard}"
                                                      From="ClosedCompactRight" To="OpenCompactOverlayRight" />
                                    <VisualTransition Storyboard="{StaticResource OpenOverlayLeftToClosedStoryboard}"
                                                      From="OpenOverlayLeft" To="Closed" />
                                    <VisualTransition Storyboard="{StaticResource OpenOverlayRightToClosedStoryboard}"
                                                      From="OpenOverlayRight" To="Closed" />
                                    <VisualTransition Storyboard="{StaticResource OpenCompactOverlayLeftToClosedCompactLeftStoryboard}"
                                                      From="OpenCompactOverlayLeft" To="ClosedCompactLeft" />
                                    <VisualTransition Storyboard="{StaticResource OpenCompactOverlayRightToClosedCompactRightStoryboard}"
                                                      From="OpenCompactOverlayRight" To="ClosedCompactRight" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="None"/>
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="ClosedCompactLeft" Storyboard="{StaticResource ClosedCompactLeftStoryboard}" />
                                <VisualState x:Name="ClosedCompactRight" Storyboard="{StaticResource ClosedCompactRightStoryboard}" />
                                <VisualState x:Name="OpenOverlayLeft" Storyboard="{StaticResource OpenOverlayLeftStoryboard}" />
                                <VisualState x:Name="OpenOverlayRight" Storyboard="{StaticResource OpenOverlayRightStoryboard}" />
                                <VisualState x:Name="OpenInlineLeft" Storyboard="{StaticResource OpenInlineLeftStoryboard}" />
                                <VisualState x:Name="OpenInlineRight" Storyboard="{StaticResource OpenInlineRightStoryboard}" />
                                <VisualState x:Name="OpenCompactOverlayLeft" Storyboard="{StaticResource OpenCompactOverlayLeftStoryboard}" />
                                <VisualState x:Name="OpenCompactOverlayRight" Storyboard="{StaticResource OpenCompactOverlayRightStoryboard}" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OverlayVisibilityStates">
                                <VisualState x:Name="OverlayNotVisible"/>
                                <VisualState x:Name="OverlayVisible" Storyboard="{StaticResource OverlayVisibleStoryboard}"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="{Binding TemplateSettings.OpenPaneGridLength, FallbackValue=0, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <ColumnDefinition x:Name="ColumnDefinition2" Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="ContentRoot" Grid.ColumnSpan="2">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ContentTransform"/>
                            </Grid.RenderTransform>
                            <ContentPresenter Focusable="False" Content="{TemplateBinding Content}"/>
                            <Rectangle x:Name="LightDismissLayer" Fill="{DynamicResource SystemControlTransparentBrush}" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="PaneRoot" Background="{TemplateBinding PaneBackground}" Grid.ColumnSpan="2" HorizontalAlignment="Left" Visibility="Collapsed" Width="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                            <Grid.Clip>
                                <RectangleGeometry x:Name="PaneClipRectangle">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="PaneClipRectangleTransform"/>
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="PaneTransform"/>
                            </Grid.RenderTransform>
                            <ContentPresenter Focusable="False" Content="{TemplateBinding Pane}"/>
                            <Rectangle x:Name="HCPaneBorder" Fill="{DynamicResource SystemControlTransparentBrush}" HorizontalAlignment="Right" Visibility="Collapsed" Width="1"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region 'MSB.UI.Controls.NavigationView'-->

    <Style TargetType="controls:NavigationView">
        <Setter Property="CompactPaneLength" Value="48"/>
        <Setter Property="OpenPaneLength" Value="250"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:NavigationView">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Resources>
                            <Storyboard x:Key="CompactStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="EmptyRowDefinition" Storyboard.TargetProperty="Height"
                                                                To="0"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SplitView" Storyboard.TargetProperty="DisplayMode">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static controls:SplitViewDisplayMode.CompactOverlay}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonsPanel" Storyboard.TargetProperty="Orientation">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Orientation.Vertical}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneHeaderPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="0"/>
                                </Int32AnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PaneHeaderPresenter" Storyboard.TargetProperty="Margin">
                                    <DiscreteThicknessKeyFrame KeyTime="0:0:0" Value="48 0 0 0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandedStoryboard">
                                <animations:GridLengthAnimation BeginTime="0:0:0" Storyboard.TargetName="EmptyRowDefinition" Storyboard.TargetProperty="Height"
                                                                To="0"/>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SplitView" Storyboard.TargetProperty="DisplayMode">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static controls:SplitViewDisplayMode.CompactInline}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonsPanel" Storyboard.TargetProperty="Orientation">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Orientation.Vertical}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <Int32AnimationUsingKeyFrames Storyboard.TargetName="PaneHeaderPresenter" Storyboard.TargetProperty="(Grid.Row)">
                                    <DiscreteInt32KeyFrame KeyTime="0:0:0" Value="0"/>
                                </Int32AnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PaneHeaderPresenter" Storyboard.TargetProperty="Margin">
                                    <DiscreteThicknessKeyFrame KeyTime="0:0:0" Value="48 0 0 0"/>
                                </ThicknessAnimationUsingKeyFrames>
                            </Storyboard>
                        </Border.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="Minimal"/>
                                <VisualState x:Name="Compact"
                                             Storyboard="{StaticResource CompactStoryboard}"/>
                                <VisualState x:Name="Expanded"
                                             Storyboard="{StaticResource ExpandedStoryboard}"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid >
                            <controls:SplitView x:Name="SplitView" Background="{TemplateBinding Background}" CompactPaneLength="{TemplateBinding CompactPaneLength}" OpenPaneLength="{TemplateBinding OpenPaneLength}" IsPaneOpen="{Binding IsPaneOpen, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}">
                                <controls:SplitView.Pane>
                                    <Grid x:Name="PaneGrid" HorizontalAlignment="Left" Width="{TemplateBinding CompactPaneLength}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{Binding ActualHeight, ElementName=ButtonsPanel, Converter={StaticResource DoubleToGridLengthConverter}}"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter x:Name="PaneHeaderPresenter" Grid.Row="1" Height="48" MaxHeight="48" VerticalAlignment="Bottom" Content="{TemplateBinding PaneHeader}"/>
                                        <ContentPresenter Grid.Row="2" Content="{TemplateBinding PaneCustomContent}"/>
                                        <controls:NavigationViewList x:Name="MenuItems" Grid.Row="3" ItemsSource="{TemplateBinding MenuItems}" Margin="0 10 0 0"/>
                                        <controls:NavigationViewList x:Name="FooterItems" Grid.Row="5" ItemsSource="{TemplateBinding FooterItems}"/>
                                    </Grid>
                                </controls:SplitView.Pane>
                                <Grid x:Name="ContentGrid" Margin="{Binding TemplateSettings.TitleBarMargin, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18" x:Name="EmptyRowDefinition"/>
                                        <!--idk-->
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="1" Focusable="False" Content="{TemplateBinding Header}"/>
                                    <ContentPresenter Grid.Row="2" Focusable="False" Content="{TemplateBinding Content}"/>
                                </Grid>
                            </controls:SplitView>
                            <Grid x:Name="NavButtonsGrid" VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Row="1" x:Name="ButtonsPanel" Orientation="Horizontal">
                                    <Button x:Name="BackButton" Style="{StaticResource NavigationBackButtonStyle}" Visibility="{Binding TemplateSettings.BackButtonVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}" IsEnabled="{TemplateBinding IsBackButtonEnabled}"/>
                                    <Button x:Name="PaneToggleButton" Style="{StaticResource PaneToggleButtonStyle}" Visibility="{Binding TemplateSettings.PaneToggleButtonVisibility, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </StackPanel>
                                <Rectangle Grid.ColumnSpan="2" x:Name="TitleBarDrawableRectangle" VerticalAlignment="Top" MinHeight="32" Fill="{DynamicResource SystemControlTransparentBrush}" Visibility="Collapsed"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsTitleBarPaddingEnabled" Value="True"/>
                                <Condition Property="IsActingAsTitleBar" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PaneGrid" Property="Margin" Value="{Binding TemplateSettings.TitleBarMargin, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter TargetName="TitleBarDrawableRectangle" Property="Visibility" Value="Hidden"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsTitleBarPaddingEnabled" Value="False"/>
                                <Condition Property="IsActingAsTitleBar" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TitleBarDrawableRectangle" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="TitleBarDrawableRectangle" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="TitleBarDrawableRectangle" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="NavButtonsGrid" Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="IsTitleBarPaddingEnabled" Value="True"/>
                                <Condition Property="IsActingAsTitleBar" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PaneGrid" Property="Margin" Value="{Binding TemplateSettings.TitleBarMargin, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter TargetName="TitleBarDrawableRectangle" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="NavButtonsGrid" Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
                        </MultiTrigger>
                        <Trigger Property="IsPaneOpen" Value="True">
                            <Setter TargetName="PaneGrid" Property="Width" Value="{Binding OpenPaneLength, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
</ResourceDictionary>